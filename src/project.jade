doctype html
html(ng-app="app")
    head
        include components/jade/header

        script(src="{$ROOT}/components/js/codemirror/codemirror.js")

        // fold code
        script(src='{$ROOT}/components/js/codemirror/addon/edit/matchbrackets.js')
        script(src='{$ROOT}/components/js/codemirror/addon/fold/foldcode.js')
        script(src='{$ROOT}/components/js/codemirror/addon/fold/foldgutter.js')
        script(src='{$ROOT}/components/js/codemirror/addon/fold/brace-fold.js')
        script(src='{$ROOT}/components/js/codemirror/addon/fold/xml-fold.js')
        script(src='{$ROOT}/components/js/codemirror/addon/fold/markdown-fold.js')
        script(src='{$ROOT}/components/js/codemirror/addon/fold/comment-fold.js')

        script(src="{$ROOT}/components/js/codemirror/mode/javascript/javascript.js")
        script(src="{$ROOT}/components/js/codemirror/mode/python/python.js")
        script(src="{$ROOT}/components/js/codemirror/mode/r/r.js")
        script(src="{$ROOT}/components/js/codemirror/mode/lua/lua.js")
        script(src="{$ROOT}/components/js/codemirror/mode/markdown/markdown.js")

        link(rel="stylesheet", href="{$ROOT}/components/css/codemirror/codemirror.css")
        link(rel="stylesheet", href="{$ROOT}/components/js/codemirror/addon/fold/foldgutter.css")

        script(src="{$ROOT}/view/js/project.js")
        link(rel="stylesheet", href="{$ROOT}/view/css/project.css")

    body(ng-controller='ctrl')
        // component: nav
        .container-fluid.top-menu
            include ./components/jade/navbar

            .toolbar(ng-cloak)
                .container-fluid
                    button.btn.btn-secondary.btn-sm(ng-click='history()', ng-cloak)
                        i.fa.fa-home
                    button.btn.btn-secondary.btn-sm(ng-click='click.list()', ng-cloak)
                        i.fa.fa-list
                    .btn-group(role="group", aria-label="commands")
                        button.btn.btn-secondary.btn-sm(ng-click='click.run()', ng-cloak, ng-if='ACCESS_STATUS === "GRANTALL"')
                            i.fa.fa-play(ng-if='status.running != "running"')
                            i.fa.fa-stop(ng-if='status.running == "running"')
                        button.btn.btn-secondary.btn-sm(ng-click='click.clean()', ng-if='ACCESS_STATUS === "GRANTALL"')
                            i.fa.fa-eraser
                        button.btn.btn-secondary.btn-sm(ng-click='click.save()', ng-if='ACCESS_STATUS === "GRANTALL"')
                            i.fa.fa-floppy-o
                    .btn-group(role="group", aria-label="editor")
                        button.btn.btn-secondary.btn-sm(ng-click='click.add()', ng-if='ACCESS_STATUS === "GRANTALL"')
                            i.fa.fa-plus-square
                        button.btn.btn-secondary.btn-sm(ng-click='click.remove()', ng-if='ACCESS_STATUS === "GRANTALL"')
                            i.fa.fa-minus-circle
                    .btn-group(role="group", aria-label="export")
                        button.btn.btn-secondary.btn-sm(ng-click='click.export()')
                            i.fa.fa-book
                        button.btn.btn-secondary.btn-sm(ng-click='click.exportRun()')
                            i.fa.fa-rocket
                    .save-time(style='float: right; font-size: 14px;') {{status.lastSaved}}

        // component: view
        .view-container(ng-cloak)
            // component: file browse
            .finder-view
                div(data-angular-treeview='true', data-on-select='project_info_bind', data-tree-model='project_info', data-node-id='id', data-node-label='title', data-node-children='narrower', ng-if='ACCESS_STATUS === "GRANTALL"')
                div(data-angular-treeview='true', data-on-select='click.finderList', data-tree-model='finder', data-node-id='id', data-node-label='title', data-node-children='narrower')

            // component: code editor
            .editor-view(ng-if='status.view == "package.json"')
                .code-editor#code-editor-package-json

            .editor-view.container(ng-if='status.view == "remote"')
                .inner(style='max-width: 1024px; margin: 0 auto;')
                    br
                    .alert.alert-success(role='alert')
                        strong Remote
                        |  set remote server config

                    .text-right(style='text-align: right;')
                        button.btn.btn-primary.btn-sm(ng-click='remote.click.add()') Add

                    br

                    table.table.table-hover.remote-table
                        tr
                            th host server
                            th user
                            th password
                            th target
                            th process arguments
                            th
                        tr(ng-repeat='item in remote.list', ng-cloak)
                            td
                                input.remote-input(type='text', ng-model='item.host', placeholder='http://localhost:3000')
                            td
                                input.remote-input(type='text', ng-model='item.user', placeholder='user')
                            td
                                input.remote-input(type='password', ng-model='item.password', placeholder='password')
                            td
                                input.remote-input(type='text', ng-model='item.target', placeholder='lib or 1 ..')
                            td
                                input.remote-input(type='text', ng-model='item.argv', placeholder='arg1, arg2 ..')
                            td(ng-if='connected[item.host]')
                                button.btn.btn-success.btn-sm(ng-click='remote.click.run(item)', ng-if='connected[item.host] !== "running"') Run
                                button.btn.btn-warning.btn-sm(ng-click='remote.click.stop(item)', ng-if='connected[item.host] === "running"') Stop
                                | &nbsp;
                                div(ng-if='connected[item.host] !== "running"', style='display: inline-block;')
                                    button.btn.btn-warning.btn-sm(ng-click='remote.click.disconnect(item)')
                                        i.fa.fa-chain-broken
                                    | &nbsp;
                                button.btn.btn-secondary.btn-sm(ng-click='remote.click.log(item)')
                                    i.fa.fa-terminal
                            td(ng-if='!connected[item.host]')
                                button.btn.btn-sm.btn-secondary(ng-click='remote.click.connect(item)') Connect
                                | &nbsp;
                                button.btn.btn-danger.btn-sm(ng-click='remote.click.remove($index)')
                                    i.fa.fa-minus-circle


            .editor-view.container(ng-if='status.view == "config"')
                br
                .alert.alert-success(role='alert')
                    strong Mailing List
                    |  When something occurred, Saturn send you an email.

                .form-group.row
                    label.col-xs-3.col-form-label Email
                    .col-xs-9
                        input.form-control(type='text', ng-model='config.mailing.to', placeholder='test@test.com, test2@test.com')

                .form-group.row
                    label.col-xs-3.col-form-label When
                    .col-xs-9
                        .btn-group(data-toggle='buttons', ng-cloak)
                            .btn.btn-secondary(ng-click='config.click.mailing("error")', class='{{config.mailing.error == true ? "active" : ""}}')
                                |  Error
                            .btn.btn-secondary(ng-click='config.click.mailing("warning")', class='{{config.mailing.warning ? "active" : ""}}')
                                |  Warning
                            .btn.btn-secondary(ng-click='config.click.mailing("finish")', class='{{config.mailing.finish ? "active" : ""}}')
                                |  Finish

                br

                .alert.alert-success(role='alert')
                    strong Env

                .form-group.row
                    label.col-xs-3.col-form-label Use Async/Await <br> (Node.js version 7)
                    .col-xs-9
                        .btn(ng-click='config.await = !config.await', class='{{config.await === true ? "btn-primary" : "btn-secondary"}}', ng-bind='config.await === true ? "Enabled" : "Disabled"')

                .form-group.row
                    label.col-xs-3.col-form-label Process Arguments
                    .col-xs-9
                        input.form-control(type='text', ng-model='config.argv', placeholder='process.argv, split by comma (,)')

                .form-group.row
                    label.col-xs-3.col-form-label Node Max Heap
                    .col-xs-9
                        input.form-control(type='text', ng-model='config.NODE_MAX_HEAP', placeholder='4')

                .form-group.row
                    label.col-xs-3.col-form-label Python Path
                    .col-xs-9
                        input.form-control(type='text', ng-model='config.python', placeholder='~/anaconda3/bin/python')

                br

                .alert.alert-success(role='alert')
                    strong Global Variables

                .form-group.row
                    button.btn.btn-danger.btn-block(ng-click='config.click.deleteVariable()') Clear

            .editor-view(ng-show='status.view == "editor"', ng-cloak)
                // component: lib code editor
                .code-container(ng-cloak, ng-class='status.singleFocused == "libs" && status.running == "running" ? "running": ""')
                    .row.code-box(ng-click='click.codebox(-1)', ng-class='status.focused == -1 ? "active":""')
                        .col-md-1
                            b(ng-click='inputLong.lib = !inputLong.lib') in [libs]
                        .col-md-11(ng-class='inputLong.lib ? "scroll" : ""')
                            .code-editor#code-editor-libs

                    .row.code-box.output(ng-if='singleLog.libs && singleLog.libs.length > 0', ng-class='status.focused == -1 ? "active":""')
                        .col-md-1(ng-click='outputLong.lib = !outputLong.lib')
                            b out [libs] &nbsp;
                        .col-md-11(ng-class='outputLong.lib ? "" : "scroll"')
                            pre.output-messages
                                div(ng-repeat='log in singleLog.libs track by $index', ng-class='log.status', ng-show='outputLong.lib || $index >= singleLog.libs.length - 5')
                                    div(ng-if='log.status == "data" || log.status == "error"', ng-bind-html='log.message')

                    .row.code-box.chart(ng-if='chartLog.libs' style='width: 100%; text-align: center; min-height: 0;', ng-class='status.focused == -1 ? "active":""')
                        div(ng-repeat='chart in chartLog.libs', style='display: inline-block;')
                            div(id='chart-libs-{{chart.id}}', style='display: inline-block !important; width: {{chart.data.width}}; height: {{chart.data.height}}', ng-if='chart.graph=="vis"')
                            canvas(id='chart-libs-{{chart.id}}', width='{{chart.data.width}}', height='{{chart.data.height}}', style='display: inline-block !important;', ng-if='chart.graph=="chart"')

                // component: additional code editor
                .code-container(ng-repeat='code in flowpipe track by $index', style='margin-left: {{status.indent[$index]*48}}px;', ng-cloak, ng-class='status.singleFocused == $index && status.running == "running" ? "running": ""')
                    .row.code-box(ng-click='click.codebox($index)', ng-class='code.type == "markdown" ? "markdown" : status.focused == $index ? "active":""')
                        .col-md-1
                            b(ng-click='inputLong[$index] = !inputLong[$index]') in [{{$index}}] &nbsp;
                            select(ng-model='code.type', ng-change='event.changed()', ng-disabled='code.value != ""')
                                option(value='work') js
                                option(value='nodesync') js-sync
                                option(value='python') python
                                option(value='torch') torch
                                option(value='r') R
                                option(value='markdown') readme
                                option(value='loop') loop
                        .col-md-11(ng-class='inputLong[$index] ? "scroll" : ""')
                            // component: if loop
                            .loop(ng-if='code.type == "loop"')
                                .row
                                    .col-md-10
                                        .code-editor(id='code-editor-{{code.id}}')
                                    .col-md-2(style='text-align: right;')
                                        | end &nbsp;
                                        select(ng-model='code.block_end', ng-change='event.changed()')
                                            option(ng-repeat='works in loopwork[$index]', value='{{works}}') {{works}}
                            // component: if work
                            .work(ng-if='code.type == "work"')
                                .code-editor(id='code-editor-{{code.id}}')
                            .work(ng-if='code.type == "nodesync"')
                                .code-editor(id='code-editor-{{code.id}}')
                            .work(ng-if='code.type == "python"')
                                .code-editor(id='code-editor-{{code.id}}')
                            .work(ng-if='code.type == "torch"')
                                .code-editor(id='code-editor-{{code.id}}')
                            .work(ng-if='code.type == "r"')
                                .code-editor(id='code-editor-{{code.id}}')
                            .markdown(ng-if='code.type == "markdown"')
                                .editable(ng-if='ACCESS_STATUS === "GRANTALL"')
                                    .preview(id='code-preview-{{code.id}}')
                                    .code-editor(id='code-editor-{{code.id}}')
                                .readonly(ng-if='ACCESS_STATUS !== "GRANTALL"')
                                    .code-editor(id='code-editor-{{code.id}}', style='display: none;')
                                    .preview(id='code-preview-{{code.id}}')


                    .row.code-box.output(ng-if='singleLog[$index] && singleLog[$index].length > 0', ng-class='status.focused == $index ? "active":""')
                        .col-md-1(ng-click='outputLong[$index] = !outputLong[$index]')
                            b out [{{$index}}] &nbsp;
                        .col-md-11(ng-class='outputLong[$index] ? "" : "scroll"')
                            pre.output-messages
                                div(ng-repeat='log in singleLog[$index] track by $index', ng-class='log.status', ng-show='outputLong[$parent.$index] || $index >= singleLog[$parent.$index].length - 5')
                                    div(ng-if='log.status == "data" || log.status == "error"', ng-bind-html='log.message')

                    .row.code-box.chart(ng-if='chartLog[$index]', style='width: 100%; text-align: center;', ng-class='status.focused == $index ? "active":""')
                        div(ng-repeat='chart in chartLog[$index]', id='chart-{{$parent.$parent.$index}}-{{chart.id}}', style='display: inline-block !important; width: {{chart.data.width}}; height: {{chart.data.height}}', ng-if='chart.graph=="vis"')
                        canvas(ng-repeat='chart in chartLog[$index]', id='chart-{{$parent.$parent.$index}}-{{chart.id}}', style='display: inline-block !important;', ng-if='chart.graph=="chart"')

        #remote-log.modal.fade(tabindex='-1', role='dialog', aria-labelledby='alert', aria-hidden='true')
            .modal-dialog
                .modal-content
                    .modal-header
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                            span(aria-hidden='true') ×
                        h4.modal-title {{remoteLogSelectedHost}}
                    .modal-body
                        pre
                            div(ng-repeat='log in remoteLog[remoteLogSelectedHost]') {{log}}
                    .modal-footer
                        button.btn.btn-secondary(type='button', data-dismiss='modal') Close
        // component: dialogs
        include components/jade/modal